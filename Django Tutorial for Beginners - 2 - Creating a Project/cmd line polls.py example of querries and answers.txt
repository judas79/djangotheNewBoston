
(env_site1) C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\sampsite>python manage.py makemigrations polls
Migrations for 'polls':
  polls\migrations\0001_initial.py:
    - Create model Choice
    - Create model Question
    - Add field question to choice

(env_site1) C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\sampsite>python manage.py sqlmigrate polls 0001
BEGIN;
--
-- Create model Choice
--
CREATE TABLE "polls_choice" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "choice_text" varchar(200) NOT NULL, "votes" integer NOT NULL);
--
-- Create model Question
--
CREATE TABLE "polls_question" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "question_text" varchar(200) NOT NULL, "pub_date" datetime NOT NULL);
--
-- Add field question to choice
--
ALTER TABLE "polls_choice" RENAME TO "polls_choice__old";
CREATE TABLE "polls_choice" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "choice_text" varchar(200) NOT NULL, "votes" integer NOT NULL, "question_id" integer NOT NULL REFERENCES "polls_question" ("id"));
INSERT INTO "polls_choice" ("id", "choice_text", "votes", "question_id") SELECT "id", "choice_text", "votes", NULL FROM "polls_choice__old";
DROP TABLE "polls_choice__old";
CREATE INDEX "polls_choice_7aa0f6ee" ON "polls_choice" ("question_id");
COMMIT;

(env_site1) C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\sampsite>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, polls, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying polls.0001_initial... OK
  Applying sessions.0001_initial... OK

(env_site1) C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\sampsite>python manage.py shell
Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 16:07:46) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from polls.models import Questions, Choice
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ImportError: cannot import name 'Questions'
>>> from polls.models import Question, Choice
>>> Question.objects.all()
<QuerySet []>
>>> from django.utils import timezone
>>> q = Question(question_text='What's New?, pub_date=timezone.now())
  File "<console>", line 1
    q = Question(question_text='What's New?, pub_date=timezone.now())
                                     ^
SyntaxError: invalid syntax
>>> q = Question(question_text='Whats New?, pub_date=timezone.now())
  File "<console>", line 1
    q = Question(question_text='Whats New?, pub_date=timezone.now())
                                                                   ^
SyntaxError: EOL while scanning string literal
>>> q = Question(question_text='Whats New?', pub_date=timezone.now())
>>> q.save()
>>> q.id
1
>>> q.question_text
'Whats New?'
>>> q.pub_date
datetime.datetime(2020, 2, 4, 1, 32, 49, 923660, tzinfo=<UTC>)
>>> q.quesion_text = "What's up doc?"
>>> q.save()
>>> Question.objects.all()
<QuerySet [<Question: Whats New?>]>
>>> Question.objects.filter(id=1)
<QuerySet [<Question: Whats New?>]>
>>> Question.objects.filter(id=2)
<QuerySet []>
>>> q = Question(question_text="What's New?", pub_date=timezone.now())
>>> q.save()
>>> Question.objects.filter(id=1)
<QuerySet [<Question: Whats New?>]>
>>> Question.objects.filter(question_text__startswith='
  File "<console>", line 1
    Question.objects.filter(question_text__startswith='
                                                      ^
SyntaxError: EOL while scanning string literal
>>> Question.objects.filter(question_text__startswith='What')
<QuerySet [<Question: Whats New?>, <Question: What's New?>]>
>>> current_year = timezone.now().year
>>> Question.objects.get(pub_date__year=current_year)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\query.py", line 389, in get
    (self.model._meta.object_name, num)
polls.models.MultipleObjectsReturned: get() returned more than one Question -- it returned 2!
>>> from django.utils import timezone
>>> current_year = timezone.now().year
>>> Question.objects.get(pub_date__year=current_year)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\query.py", line 389, in get
    (self.model._meta.object_name, num)
polls.models.MultipleObjectsReturned: get() returned more than one Question -- it returned 2!
>>> Question.objects.get(pub_date__year=current_year)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\query.py", line 389, in get
    (self.model._meta.object_name, num)
polls.models.MultipleObjectsReturned: get() returned more than one Question -- it returned 2!
>>> from polls.models import Question, Choice
>>> current_year = timezone.now().year
>>> Question.objects.get(pub_date__year=current_year)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Gina\PycharmProjects\Django-DerekBanas\env_site1\lib\site-packages\django-1.10.9.dev20171123183751-py3.6.egg\django\db\models\query.py", line 389, in get
    (self.model._meta.object_name, num)
polls.models.MultipleObjectsReturned: get() returned more than one Question -- it returned 2!
>>> Question.objects.filter(id=2)
<QuerySet [<Question: What's New?>]>
>>> Question.objects.get(pk=1)
<Question: Whats New?>
>>> q = Question.objects.get(pk=1)
>>> q.was_published_recently()
True
>>> q.choice_set.all()
<QuerySet []>
>>> q.choice_set.create(choice_text='Not Much', votes=0)
<Choice: Not Much>
>>> q.choice_set.create(choice_text='The Sky', votes=0)
<Choice: The Sky>
>>> q.choice_set.create(choice_text='The Clouds', votes=0)
<Choice: The Clouds>
>>> q.choice_set.all()
<QuerySet [<Choice: Not Much>, <Choice: The Sky>, <Choice: The Clouds>]>
>>> q.choice_set.count()
3
>>> Choice.objects.filter(question__pub_date__year=current_year)
<QuerySet [<Choice: Not Much>, <Choice: The Sky>, <Choice: The Clouds>]>
>>> c = q.choice_set.filter(choice_text__startswith='The Clouds')
>>> c.delete()
(1, {'polls.Choice': 1})
>>> q = Question(question_text='Whats New?', pub_date=timezone.now())q = Question(question_text='Whats New?', pub_date=timezone.now())